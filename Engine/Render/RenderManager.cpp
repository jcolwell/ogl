//===========================================================================
// FILE: RenderManager.cpp
// Desc: 
//===========================================================================
#include "RenderManager.h"
//===========================================================================

//===========================================================================
// NAMELESS NAMESPACE
//===========================================================================
namespace
{
	static RenderManager *sInstance = nullptr;
}
//===========================================================================

//===========================================================================
// RenderManager IMPLEMENTATION
//===========================================================================

RenderManager* RenderManager::GetInstance()
{
	return (sInstance)? sInstance : sInstance = new RenderManager();
}

//---------------------------------------------------------------------------

void RenderManager::Shutdown()
{
	this->CloseWindow();

	SAVE_DELETE(sInstance);
}

//---------------------------------------------------------------------------

void RenderManager::OpenWindow(int width, int height, const char* name)
{
	mRenderer.OpenWindow(width, height, name);
}

//---------------------------------------------------------------------------

void RenderManager::CloseWindow()
{
	mRenderer.CloseWindow();
}

//---------------------------------------------------------------------------

bool RenderManager::IsWindowOpen()
{
	return mRenderer.IsWindowOpen();
}

//---------------------------------------------------------------------------

void RenderManager::Render()
{
	mRenderer.Render();
}

//---------------------------------------------------------------------------

RenderManager::RenderManager()
{

}

//---------------------------------------------------------------------------
